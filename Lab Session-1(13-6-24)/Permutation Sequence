#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void swap(char *a, char *b) {
    char temp = *a;
    *a = *b;
    *b = temp;
}

void reverse(char *start, char *end) {
    while (start < end) {
        swap(start, end);
        start++;
        end--;
    }
}

char *getPermutation(int n, int k) {
    char *nums = (char *)malloc(n * sizeof(char));
    for (int i = 0; i < n; i++) {
        nums[i] = i + '1';
    }
    
    for (int i = 1; i < k; i++) {
        next_permutation(nums, n);
    }
    
    return nums;
}

void next_permutation(char *nums, int n) {
    int i = n - 2;
    while (i >= 0 && nums[i] >= nums[i + 1]) {
        i--;
    }
    
    if (i >= 0) {
        int j = n - 1;
        while (j >= 0 && nums[j] <= nums[i]) {
            j--;
        }
        swap(&nums[i], &nums[j]);
    }
    
    reverse(nums + i + 1, nums + n - 1);
}

int main() {
    int n = 3, k = 3;
    char *result = getPermutation(n, k);
    printf("Output: \"%s\"\n", result);
    free(result);
    return 0;
}

