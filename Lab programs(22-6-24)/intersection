#include <stdio.h>
#include <stdlib.h>

int compareInts(const void* a, const void* b) {
    return ((int)a - (int)b);
}

int* intersection(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize) {
    qsort(nums1, nums1Size, sizeof(int), compareInts);
    qsort(nums2, nums2Size, sizeof(int), compareInts);

    int* result = (int*)malloc(nums1Size * sizeof(int));
    *returnSize = 0;

    int i = 0, j = 0;
    while (i < nums1Size && j < nums2Size) {
        if (nums1[i] < nums2[j]) {
            i++;
        } else if (nums1[i] > nums2[j]) {
            j++;
        } else {
            // Found intersection
            if (*returnSize == 0 || nums1[i] != result[*returnSize - 1]) {
                result[(*returnSize)++] = nums1[i];
            }
            i++;
            j++;
        }
    }

    return result;
}

int main() {
    int nums1[] = {1, 2, 2, 1};
    int nums1Size = sizeof(nums1) / sizeof(nums1[0]);
    int nums2[] = {2, 2};
    int nums2Size = sizeof(nums2) / sizeof(nums2[0]);

    int returnSize;
    int* result = intersection(nums1, nums1Size, nums2, nums2Size, &returnSize);

    printf("Output: [");
    for (int i = 0; i < returnSize; i++) {
        printf("%d", result[i]);
        if (i < returnSize - 1) {
            printf(", ");
        }
    }
    printf("]\n");

    free(result);

    return 0;
}
