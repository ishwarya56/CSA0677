#include <stdio.h>

void findIntersection(int nums1[], int nums2[], int len1, int len2) {
    int result[1000]; // Assuming the maximum possible size
    int k = 0;

    for (int i = 0; i < len1; i++) {
        for (int j = 0; j < len2; j++) {
            if (nums1[i] == nums2[j]) {
                int exists = 0;
                for (int m = 0; m < k; m++) {
                    if (result[m] == nums1[i]) {
                        exists = 1;
                        break;
                    }
                }
                if (!exists) {
                    result[k++] = nums1[i];
                }
            }
        }
    }

    printf("Output: [");
    for (int i = 0; i < k; i++) {
        printf("%d", result[i]);
        if (i < k - 1) {
            printf(", ");
        }
    }
    printf("]\n");
}

int main() {
    int nums1[] = {1, 2, 2, 1};
    int nums2[] = {2, 2};
    int len1 = sizeof(nums1) / sizeof(nums1[0]);
    int len2 = sizeof(nums2) / sizeof(nums2[0]);

    findIntersection(nums1, nums2, len1, len2);

    int nums3[] = {4, 9, 5};
    int nums4[] = {9, 4, 9, 8, 4};
    int len3 = sizeof(nums3) / sizeof(nums3[0]);
    int len4 = sizeof(nums4) / sizeof(nums4[0]);

    findIntersection(nums3, nums4, len3, len4);

    return 0;
}
