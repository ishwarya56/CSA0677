#include <stdio.h>
#include <limits.h>

// Function to find the largest sum subarray
int maxSubArray(int* nums, int numsSize) {
    int maxSoFar = INT_MIN, maxEndingHere = 0;
    
    for (int i = 0; i < numsSize; i++) {
        maxEndingHere += nums[i];
        if (maxSoFar < maxEndingHere) {
            maxSoFar = maxEndingHere;
        }
        if (maxEndingHere < 0) {
            maxEndingHere = 0;
        }
    }
    return maxSoFar;
}

// Example usage
int main() {
    int nums1[] = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int numsSize1 = sizeof(nums1) / sizeof(nums1[0]);
    printf("Largest sum subarray: %d\n", maxSubArray(nums1, numsSize1));

    int nums2[] = {1};
    int numsSize2 = sizeof(nums2) / sizeof(nums2[0]);
    printf("Largest sum subarray: %d\n", maxSubArray(nums2, numsSize2));

    int nums3[] = {5, 4, -1, 7, 8};
    int numsSize3 = sizeof(nums3) / sizeof(nums3[0]);
    printf("Largest sum subarray: %d\n", maxSubArray(nums3, numsSize3));

    return 0;
}
