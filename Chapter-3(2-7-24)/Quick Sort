#include <stdio.h>

// Function to swap two elements
void swap(int *a, int *b) {
    int t = *a;
    *a = *b;
    *b = t;
}

// Function to perform the partition operation
int partition(int arr[], int low, int high) {
    int pivot = arr[low];
    int left = low + 1;
    int right = high;

    while (left <= right) {
        while (left <= right && arr[left] <= pivot)
            left++;
        while (left <= right && arr[right] > pivot)
            right--;

        if (left < right) {
            swap(&arr[left], &arr[right]);
        }
    }
    swap(&arr[low], &arr[right]);
    return right;
}

// Function to perform Quick Sort
void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        printf("Array after partitioning: ");
        for (int i = 0; i < 9; i++)
            printf("%d ", arr[i]);
        printf("\n");

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int arr1[] = {10, 16, 8, 12, 15, 6, 3, 9, 5};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);

    printf("Original array: ");
    for (int i = 0; i < n1; i++)
        printf("%d ", arr1[i]);
    printf("\n");

    quickSort(arr1, 0, n1 - 1);

    printf("Sorted array: ");
    for (int i = 0; i < n1; i++)
        printf("%d ", arr1[i]);
    printf("\n");

    return 0;
}
