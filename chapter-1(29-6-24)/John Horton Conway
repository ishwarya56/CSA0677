#include <stdio.h>

#define M 4
#define N 3

void printBoard(int board[M][N]) {
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            printf("%d ", board[i][j]);
        }
        printf("\n");
    }
}

int countLiveNeighbors(int board[M][N], int row, int col) {
    int directions[8][2] = {
        {-1, -1}, {-1, 0}, {-1, 1},
        {0, -1},         {0, 1},
        {1, -1}, {1, 0}, {1, 1}
    };
    int liveNeighbors = 0;

    for (int i = 0; i < 8; ++i) {
        int newRow = row + directions[i][0];
        int newCol = col + directions[i][1];

        if (newRow >= 0 && newRow < M && newCol >= 0 && newCol < N) {
            liveNeighbors += board[newRow][newCol];
        }
    }

    return liveNeighbors;
}

void gameOfLife(int board[M][N]) {
    int next_board[M][N];

    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            int liveNeighbors = countLiveNeighbors(board, i, j);

            if (board[i][j] == 1) {
                if (liveNeighbors < 2 || liveNeighbors > 3) {
                    next_board[i][j] = 0;
                } else {
                    next_board[i][j] = 1;
                }
            } else {
                if (liveNeighbors == 3) {
                    next_board[i][j] = 1;
                } else {
                    next_board[i][j] = 0;
                }
            }
        }
    }

    // Copy next_board to board
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            board[i][j] = next_board[i][j];
        }
    }
}

int main() {
    int board1[M][N] = {
        {0, 1, 0},
        {0, 0, 1},
        {1, 1, 1},
        {0, 0, 0}
    };
    
    int board2[M][N] = {
        {1, 1},
        {1, 0}
    };

    printf("Input Board 1:\n");
    printBoard(board1);
    printf("\n");

    gameOfLife(board1);
    printf("Output Board 1:\n");
    printBoard(board1);
    printf("\n");

    printf("Input Board 2:\n");
    printBoard(board2);
    printf("\n");

    gameOfLife(board2);
    printf("Output Board 2:\n");
    printBoard(board2);
    printf("\n");

    return 0;
}
