#include <stdio.h>

// Function to perform binary search
int binarySearch(int arr[], int size, int key) {
    int left = 0;
    int right = size - 1;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        // Check if key is present at mid
        if (arr[mid] == key) {
            return mid;
        }
        
        // If key is greater, ignore left half
        if (arr[mid] < key) {
            left = mid + 1;
        }
        // If key is smaller, ignore right half
        else {
            right = mid - 1;
        }
    }
    
    // If the key is not present in the array
    return -1;
}

int main() {
    // Example arrays
    int arr1[] = {-9, 3, 4, 6, 8, 9, 10, 30};
    int key1 = 10;
    int size1 = sizeof(arr1) / sizeof(arr1[0]);
    
    int result1 = binarySearch(arr1, size1, key1);
    if (result1 != -1) {
        printf("Element %d is found at position %d\n", key1, result1);
    } else {
        printf("Element %d is not found\n", key1);
    }
    
    int key2 = 100;
    int result2 = binarySearch(arr1, size1, key2);
    if (result2 != -1) {
        printf("Element %d is found at position %d\n", key2, result2);
    } else {
        printf("Element %d is not found\n", key2);
    }
    
    return 0;
}
