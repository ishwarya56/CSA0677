#include <stdio.h>
#include <stdlib.h>

// Helper function to compute factorial
int factorial(int n) {
    int result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}

// Function to find the k-th permutation
void getPermutation(int n, int k, char* result) {
    int* numbers = (int*)malloc(n * sizeof(int));
    int i;
    
    // Initialize the numbers array with 1, 2, ..., n
    for (i = 0; i < n; i++) {
        numbers[i] = i + 1;
    }

    k--; // Convert k to 0-based index

    // Generate the permutation
    for (i = 0; i < n; i++) {
        int f = factorial(n - 1 - i);
        int index = k / f;
        result[i] = numbers[index] + '0';
        // Remove the used number
        for (int j = index; j < n - 1; j++) {
            numbers[j] = numbers[j + 1];
        }
        k %= f;
    }

    result[n] = '\0'; // Null-terminate the string
    free(numbers);
}

// Example usage
int main() {
    int n = 3, k = 3;
    char result[10]; // 10 is enough since n <= 9

    getPermutation(n, k, result);
    printf("The %d-th permutation of set [1, 2, 3, ..., %d] is: %s\n", k, n, result);

    n = 4, k = 9;
    getPermutation(n, k, result);
    printf("The %d-th permutation of set [1, 2, 3, ..., %d] is: %s\n", k, n, result);

    n = 3, k = 1;
    getPermutation(n, k, result);
    printf("The %d-th permutation of set [1, 2, 3, ..., %d] is: %s\n", k, n, result);

    return 0;
}
