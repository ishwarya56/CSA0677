#include <stdio.h>
#include <stdbool.h>

#define SIZE 9

// Function to check if a given board is valid
bool isValidSudoku(char board[SIZE][SIZE]) {
    bool rows[SIZE][SIZE] = {false};
    bool cols[SIZE][SIZE] = {false};
    bool boxes[SIZE][SIZE] = {false};

    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (board[i][j] != '.') {
                int num = board[i][j] - '1'; // Convert char to index (0-8)
                int boxIndex = (i / 3) * 3 + j / 3; // Calculate box index

                if (rows[i][num] || cols[j][num] || boxes[boxIndex][num]) {
                    return false; // If the number is already seen in the row, column, or box, return false
                }

                rows[i][num] = cols[j][num] = boxes[boxIndex][num] = true; // Mark the number as seen
            }
        }
    }

    return true;
}

// Function to print the result
void printResult(bool result) {
    if (result) {
        printf("true\n");
    } else {
        printf("false\n");
    }
}

// Example usage
int main() {
    char board1[SIZE][SIZE] = {
        {'5', '3', '.', '.', '7', '.', '.', '.', '.'},
        {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
        {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
        {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
        {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
        {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
        {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
        {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
        {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
    };

    char board2[SIZE][SIZE] = {
        {'8', '3', '.', '.', '7', '.', '.', '.', '.'},
        {'6', '.', '.', '1', '9', '5', '.', '.', '.'},
        {'.', '9', '8', '.', '.', '.', '.', '6', '.'},
        {'8', '.', '.', '.', '6', '.', '.', '.', '3'},
        {'4', '.', '.', '8', '.', '3', '.', '.', '1'},
        {'7', '.', '.', '.', '2', '.', '.', '.', '6'},
        {'.', '6', '.', '.', '.', '.', '2', '8', '.'},
        {'.', '.', '.', '4', '1', '9', '.', '.', '5'},
        {'.', '.', '.', '.', '8', '.', '.', '7', '9'}
    };

    printResult(isValidSudoku(board1)); // Should print true
    printResult(isValidSudoku(board2)); // Should print false

    return 0;
}
