#include <stdio.h>
#include <math.h>

// Function to calculate the length of a number
int getLength(int num) {
    int length = 0;
    while (num != 0) {
        length++;
        num /= 10;
    }
    return length;
}

// Karatsuba multiplication function
long long karatsuba(long long x, long long y) {
    int xLength = getLength(x);
    int yLength = getLength(y);

    // Base case for recursion
    if (xLength == 1 || yLength == 1)
        return x * y;

    // Calculates the size of the numbers
    int n = (int)fmax(xLength, yLength);
    int half = (n / 2) + (n % 2);

    // Split the digit sequences in the middle
    long long power = (long long)pow(10, half);
    long long a = x / power;
    long long b = x % power;
    long long c = y / power;
    long long d = y % power;

    // Recursively calculate three products
    long long ac = karatsuba(a, c);
    long long bd = karatsuba(b, d);
    long long abcd = karatsuba(a + b, c + d);

    // Applying Karatsuba formula
    return ac * (long long)pow(10, 2 * half) + (abcd - ac - bd) * power + bd;
}

int main() {
    long long x = 1234;
    long long y = 5678;
    long long result = karatsuba(x, y);

    printf("The product of %lld and %lld using Karatsuba algorithm is: %lld\n", x, y, result);

    return 0;
}
