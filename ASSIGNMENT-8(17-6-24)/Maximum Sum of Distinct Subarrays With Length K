#include <stdio.h>

int maxSubarraySum(int nums[], int size, int k) {
    int maxSum = 0;

    for (int i = 0; i <= size - k; i++) {
        int sum = 0;
        int distinct[1001] = {0}; // Assuming the range of elements is from 0 to 1000

        int j;
        for (j = 0; j < k; j++) {
            if (distinct[nums[i + j]] == 1) {
                break;
            }
            distinct[nums[i + j]] = 1;
            sum += nums[i + j];
        }

        if (j == k) {
            if (sum > maxSum) {
                maxSum = sum;
            }
        }
    }

    return maxSum;
}

int main() {
    int nums[] = {1, 5, 4, 2, 9, 9, 9};
    int k = 3;
    int size = sizeof(nums) / sizeof(nums[0]);

    int result = maxSubarraySum(nums, size, k);
    printf("Maximum subarray sum: %d\n", result);

    return 0;
}
